// Generated by CoffeeScript 1.10.0
(function() {
  var Resolver, _, assert;

  assert = require('assert');

  _ = require('underscore');

  Resolver = (function() {
    function Resolver(forge, binding) {
      this.forge = forge;
      this.binding = binding;
      assert(this.forge != null, 'The argument "forge" must have a value');
      assert(this.binding != null, 'The argument "binding" must have a value');
    }

    Resolver.prototype.resolve = function(context, args) {
      throw new Error("You must implement resolve() on " + this.constructor.name);
    };

    Resolver.prototype.resolveDependencies = function(context, dependencies, args) {
      return _.map(dependencies, (function(_this) {
        return function(dep) {
          var override, ref;
          if (dep.name === 'forge') {
            return _this.forge;
          }
          override = (ref = args[dep.name]) != null ? ref : _this.binding["arguments"][dep.name];
          return override != null ? override : _this.forge.resolve(dep.name, context, dep.hint, dep.all);
        };
      })(this));
    };

    return Resolver;

  })();

  module.exports = Resolver;

}).call(this);
